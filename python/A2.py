#!/usr/bin/env python

# Copyright Greg Hogan, 2012. Last modified 2012.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but without any warranty; without even the implied warranty of
# merchantability or fitness for a particular purpose.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

"""
The following problem is taken from Project Euler,
    https://projecteuler.net/problem=2
licenced under a Creative Commons Licence:
    Attribution-NonCommercial-ShareAlike 2.0 UK: England & Wales

Problem 2
19 October 2001

Each new term in the Fibonacci sequence is generated by adding the previous two
terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed
four million, find the sum of the even-valued terms.
"""


def naive():
    """Compute simple sum of even values from the Fibonacci sequence.

    >>> naive()
    4613732
    """

    def fibonacci(stop):
        x, y = 1, 1
        while y <= stop:
            yield y
            x, y = y, x+y

    return sum(x for x in fibonacci(4000000) if x % 2 == 0)


if __name__ == "__main__":
    import doctest
    doctest.testmod()
